Group 18: Artificial Intelligence: CSE 571

----------------------------------------------------------------------------README----------------------------------------------------------------------------------------------------------


This project is a implementation of RNN & LSTM on Flight prediction systems as proposed in the research paper (https://ieeexplore.ieee.org/abstract/document/7778092)

Github link which has the implementation of Flight Prediction systems on Neural Networks: https://github.com/yanxiaoliang/Flight-Delay-Prediction-Based-on-Neural-Networks/blob/master/project-programs-and-data/neural-network
Used the data preprocessing and neural network header file for the implementation as specified in the proposal. We implemented RNN with LSTM cells as described below.

Data used in this project is from Bureau of transports statistics (http://www.transtats.bts.gov.)

Our work includes implementation of RNN architecture via LSTM cells, backpropagating through time, using stochastic 
Gradient Descent(SGD) as the optimizer and training the model with suitable randomized weight techniques. (From Scratch. Without using tensorflow or keras)

Please find the weights learned from the trained model below. 

INFO:root:Wxi learned: [array([0.04318511, 0.06513135, 0.08338514, 0.04506495, 0.08574931,
       0.08497719]), array([0.00646989, 0.0522334 ]), array([0.03382733, 0.00049486])]
INFO:root:Whf learned: [array([-0.0379306 , -0.09305555, -0.04538899, -0.02916779, -0.02091819,
       -0.08768596]), array([-0.09755883, -0.07937379]), array([-0.01332899, -0.01972708])]
INFO:root:Wht learned: [array([0.00072798, 0.07531727, 0.08480335, 0.05645501, 0.05886772,
       0.01612531]), array([0.03433029, 0.07373554]), array([0.09853633, 0.06251006])]
INFO:root:Wci learned: [array([-0.09093643, -0.08331722, -0.09709561, -0.02610929, -0.0020647 ,
       -0.01950635]), array([-0.00266695, -0.08290303, -0.04975464, -0.0904058 , -0.01216244,
       -0.07945598]), array([-0.01510452, -0.08100115]), array([-0.00962666, -0.06509551]), array([-0.05537492, -0.07264502]), array([-0.06261043, -0.01347451])]
INFO:root:Wxf learned: [array([0.02415208, 0.06908689, 0.00729897, 0.0414225 , 0.01870196,
       0.0125759 ]), array([0.08464628, 0.00267663]), array([ 0.0674862, -0.0106614])]
INFO:root:Wci learned: []
INFO:root:Wxc learned: [array([0.01933468, 0.09553099, 0.02036359, 0.00801982, 0.05741297,
       0.01788391]), array([0.01571776, 0.09910263]), array([0.00430596, 0.01222443])]
INFO:root:Whc learned: [array([0.07164406, 0.08258479, 0.06181681, 0.03936412, 0.04049371,
       0.0178545 ]), array([0.06563724, 0.08943195]), array([0.10092552, 0.03599409])]
INFO:root:Wxo learned: [array([0.04681822, 0.08222985, 0.09836583, 0.00633024, 0.01990696,
       0.04709811]), array([0.04569755, 0.0010603 ]), array([0.03877324, 0.077127  ])]
INFO:root:Who learned: [array([0.00580488, 0.02513834, 0.06258618, 0.02309958, 0.02604146,
       0.01253198]), array([0.05835613, 0.02150786]), array([0.07760201, 0.05486887])]
INFO:root:Wco learned: [array([0.05943621, 0.07242019, 0.0217129 , 0.01007921, 0.08543965,
       0.09418633]), array([0.06883495, 0.00038593]), array([0.0188883 , 0.04271262])]
INFO:root:Weights learned: [ 0.7010051287284842  0.0589910669406495  0.7751918775620957  0.025654624988745926  0.5005960083604883  0.5309813065350004  0.6561482076787266  0.7776892345568243  0.2078619218936527  0.0013940229951403835  0.9889648257778734  0.328914238128765  0.286360697142129  0.20434356892358763  0.4670924756469981  0.4513985230153442  0.06780015338329386  0.031267470447764935  0.331947240981244  0.6070429719010624  0.7564316598156944  0.10640781657786724  0.9679942780245041  0.23220344953990615  0.5605452733603127  0.2844150708452676  0.17242007943257173  0.33072109584027787  0.3621624803267737  0.3402239949805  0.8417358868433302  0.12899778568124307  0.6995585837619339  0.7764529784052897  0.7509580980588424  0.1704172720677784  0.4114665048822683  0.11276810304409808  0.2383298749621231  0.5984728639381662  0.09794079511619083  0.6833095573440091  0.9899091821531943  0.10102459636834858  0.2073797135361647  0.22982355549772265  0.6825120651362915  0.526683045751219  0.01119267255731273  0.6118687159084232  0.38008915475687355  0.9864638294344386  0.7116486959685346  0.32039709688510526  0.4708492293786274  0.8547044698296903  0.15328418901464685  0.26976784026121875  0.298768934293724  0.7180268518257404  0.4521772573760516  0.23542569873716532  0.6388858108485886  0.3416085175833607  0.8506496866637788  0.2850976678397199  0.0890697543379448  0.8906593678401069  0.3017765890589629  0.33464317076241695  0.9577925634189998  0.021780170635948965  0.7159310900284048  0.7793689817610702  0.35601707327127513  0.4837757645099326  0.6208107786008722  0.9830549241740811  0.7545661781661321  0.20476521092771918  0.25074074552523856  0.5456236892875663  0.3492199823988183  0.1333717175801855  0.541847875764216  0.5760234416342472  0.5982512279461738  0.6780487666919137  0.6318931900669869  0.3150602912955235  0.14063812531911213  0.5838583192840381  0.7018891055067698  0.9956785321749649  0.2882593311276693  0.8627220329321951  0.7636777679439946  0.1637084438203843  0.18878360191196172  0.9228038986583992  0.029950834661619  0.38972962670447153  0.9156696903170253  0.5952806524858647  0.8723463025805445  0.14670329590573986  0.4952852121260023  0.9143435543566798  0.9028591103282709  0.7016037725654108  0.19624820396298018  0.8148620697371615  0.14659662689006028  0.2082877169842093  0.9844005557354261  0.05624235429684038  0.45473792367948773  0.24248311242304416  0.03466826505283388  0.6816898985296141  0.09842082932345515  0.40379119369060873  0.03283555011120981  0.05083442986522258  0.4100948277987346  0.9137289704690728  0.06802526769259212  0.44642324438231484  0.37031609052648173  0.929300998994955  0.3582817983524342  0.24728114052476766  0.08198038649120767  0.10352433732189252  0.27989949629912714  0.4975843455305709  0.5976948197382459  0.22594504354051076  0.748965553147898  0.5389156338212288  0.715808518055573  0.968025780634719  0.186247630674139  0.5729643527777033  0.7968816776300649  0.1288060729654713  0.7743458053314588  0.9118273101597729  0.5638072276161454  0.3144647625838094  0.8762274000910156  0.8794654424212731  0.19568071599734682  1.0469370203267063  0.1719503518226905  0.11397270662028613  0.1741554094005742  0.6045670209430475  0.8016719127534973  0.7649164248840198  0.9059258058923131  0.723928677800362  0.9996567932495559  0.4202374731796222  0.08135107689026219  -2.02442904064824  -1.7201099866308704  -1.8161226567494804  -1.640142944805769  -2.6194486295532315  3.0245742056649547 ]

--------------------------------------Dependencies-------------------------------------------------------------------
Numpy, python 3.7.0

--------------------------------------STEPS TO RUN THE PROJECT-------------------------------------------------------
1. Unzip the Group_18.zip file. 
2. Make the Group_18/neural_network folder as the working directory.  
3. Run test.py file : python test.py  